<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.121" tests="50" errors="0" skipped="0" failures="0">
  <properties>
    <property name="gopherProxySet" value="false"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="forkNumber" value="01"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/test-classes:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/classes:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-core/target/flink-core-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-annotations/target/flink-annotations-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-metrics/flink-metrics-core/target/flink-metrics-core-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/Users/liuzhiwei/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar:/Users/liuzhiwei/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/Users/liuzhiwei/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/liuzhiwei/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-guava/30.1.1-jre-14.0/flink-shaded-guava-30.1.1-jre-14.0.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-connector-files/target/flink-connector-files-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-file-sink-common/target/flink-file-sink-common-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-connector-base/target/flink-connector-base-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-asm-7/7.1-14.0/flink-shaded-asm-7-7.1-14.0.jar:/Users/liuzhiwei/.m2/repository/com/ibm/icu/icu4j/67.1/icu4j-67.1.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-core/target/flink-core-1.14.4-tests.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-test-utils-parent/flink-test-utils-junit/target/flink-test-utils-junit-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-force-shading/14.0/flink-shaded-force-shading-14.0.jar:/Users/liuzhiwei/.m2/repository/org/slf4j/slf4j-api/1.7.15/slf4j-api-1.7.15.jar:/Users/liuzhiwei/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter/5.7.2/junit-jupiter-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/liuzhiwei/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/vintage/junit-vintage-engine/5.7.2/junit-vintage-engine-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/liuzhiwei/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/Users/liuzhiwei/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/liuzhiwei/.m2/repository/org/mockito/mockito-core/2.21.0/mockito-core-2.21.0.jar:/Users/liuzhiwei/.m2/repository/net/bytebuddy/byte-buddy/1.8.22/byte-buddy-1.8.22.jar:/Users/liuzhiwei/.m2/repository/net/bytebuddy/byte-buddy-agent/1.8.22/byte-buddy-agent-1.8.22.jar:/Users/liuzhiwei/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-module-junit4/2.0.4/powermock-module-junit4-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-module-junit4-common/2.0.4/powermock-module-junit4-common-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-reflect/2.0.4/powermock-reflect-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-core/2.0.4/powermock-core-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/liuzhiwei/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-api-mockito2/2.0.4/powermock-api-mockito2-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-api-support/2.0.4/powermock-api-support-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.17.1/log4j-slf4j-impl-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-1.2-api/2.17.1/log4j-1.2-api-2.17.1.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="hadoop.version" value="2.4.1"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib"/>
    <property name="project.basedir" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common"/>
    <property name="sun.java.command" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/surefire/surefirebooter8017064036921010743.jar /Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/surefire 2022-06-10T17-37-14_312-jvmRun1 surefire8104797305428732709tmp surefire_11935237110688197575571tmp"/>
    <property name="surefire.test.class.path" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/test-classes:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/classes:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-core/target/flink-core-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-annotations/target/flink-annotations-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-metrics/flink-metrics-core/target/flink-metrics-core-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/Users/liuzhiwei/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar:/Users/liuzhiwei/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/Users/liuzhiwei/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/liuzhiwei/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-guava/30.1.1-jre-14.0/flink-shaded-guava-30.1.1-jre-14.0.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-connector-files/target/flink-connector-files-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-file-sink-common/target/flink-file-sink-common-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-connector-base/target/flink-connector-base-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-asm-7/7.1-14.0/flink-shaded-asm-7-7.1-14.0.jar:/Users/liuzhiwei/.m2/repository/com/ibm/icu/icu4j/67.1/icu4j-67.1.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-core/target/flink-core-1.14.4-tests.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-test-utils-parent/flink-test-utils-junit/target/flink-test-utils-junit-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-force-shading/14.0/flink-shaded-force-shading-14.0.jar:/Users/liuzhiwei/.m2/repository/org/slf4j/slf4j-api/1.7.15/slf4j-api-1.7.15.jar:/Users/liuzhiwei/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter/5.7.2/junit-jupiter-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/liuzhiwei/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/vintage/junit-vintage-engine/5.7.2/junit-vintage-engine-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/liuzhiwei/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/Users/liuzhiwei/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/liuzhiwei/.m2/repository/org/mockito/mockito-core/2.21.0/mockito-core-2.21.0.jar:/Users/liuzhiwei/.m2/repository/net/bytebuddy/byte-buddy/1.8.22/byte-buddy-1.8.22.jar:/Users/liuzhiwei/.m2/repository/net/bytebuddy/byte-buddy-agent/1.8.22/byte-buddy-agent-1.8.22.jar:/Users/liuzhiwei/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-module-junit4/2.0.4/powermock-module-junit4-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-module-junit4-common/2.0.4/powermock-module-junit4-common-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-reflect/2.0.4/powermock-reflect-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-core/2.0.4/powermock-core-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/liuzhiwei/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-api-mockito2/2.0.4/powermock-api-mockito2-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-api-support/2.0.4/powermock-api-support-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.17.1/log4j-slf4j-impl-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-1.2-api/2.17.1/log4j-1.2-api-2.17.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/liuzhiwei"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre"/>
    <property name="basedir" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="test.randomization.seed" value=""/>
    <property name="mvn.forkNumber" value="1"/>
    <property name="surefire.real.class.path" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/surefire/surefirebooter8017064036921010743.jar"/>
    <property name="buffer-debloat.randomization" value="true"/>
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/classes"/>
    <property name="checkpointing.changelog" value="unset"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_311-b11"/>
    <property name="user.name" value="liuzhiwei"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="10.16"/>
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/liuzhiwei/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/9v/knhh7l116z927rs422hz7g7r0000gn/T/"/>
    <property name="idea.version" value="2021.3.2"/>
    <property name="java.version" value="1.8.0_311"/>
    <property name="user.dir" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="checkpointing.randomization" value="true"/>
    <property name="java.library.path" value="/Users/liuzhiwei/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.311-b11"/>
    <property name="java.ext.dirs" value="/Users/liuzhiwei/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="maven.repo.local" value="/Users/liuzhiwei/.m2/repository"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="testExtraction[0: Expected data type: INT]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[1: Expected data type: BYTES]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[2: Expected data type: BIGINT]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.006"/>
  <testcase name="testExtraction[3: Expected error: Values of &apos;java.math.BigDecimal&apos; need fixed precision and scale.]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[4: Expected error: Cannot extract a data type from a pure &apos;java.lang.Object&apos; class. Usually, this indicates that class information is missing or got lost. Please specify a more concrete class or treat it as a RAW type.]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[5: Expected error: Cannot extract a data type from a pure &apos;org.apache.flink.types.Row&apos; class. Please use annotations to define field names and field types.]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[6: Expected error: Cannot extract a data type from an internal &apos;org.apache.flink.table.data.RowData&apos; class without further information. Please use annotations to define the full logical type.]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[7: Expected data type: DECIMAL{5, 3}]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[8: Expected data type: DECIMAL{5, 3}]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[9: Expected data type: TIMESTAMP{9}]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[10: Expected data type: TIMESTAMP{0}]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[11: Expected data type: TIMESTAMP{6}]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[12: Expected data type: INTERVAL SECOND{3}]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[13: Expected data type: INTERVAL YEAR{2} TO MONTH]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[14: Expected data type: INTERVAL MONTH]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[15: RAW with default serializer]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.003"/>
  <testcase name="testExtraction[16: RAW with custom serializer]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[17: RAW with different conversion class]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[18: RAW with more specific conversion class]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[19: Expected data type: MAP&lt;BIGINT, BOOLEAN&gt;]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[20: Expected data type: ARRAY&lt;INT&gt;]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[21: Expected error: Could not extract a data type from &apos;java.util.HashMap&lt;java.lang.Integer, java.lang.String&gt;&apos;. Interpreting it as a structured type was also not successful.]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.003"/>
  <testcase name="testExtraction[22: ARRAY type with List conversion class]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[23: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojo&lt;`intField` INT, `primitiveBooleanField` BOOLEAN NOT NULL, `primitiveIntField` INT NOT NULL, `stringField` STRING&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[24: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$ComplexPojo&lt;`mapField` MAP&lt;STRING, INT&gt;, `simplePojoField` *org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojo&lt;`intField` INT, `primitiveBooleanField` BOOLEAN NOT NULL, `primitiveIntField` INT NOT NULL, `stringField` STRING&gt;*, `someObject` RAW{&apos;java.lang.Object&apos;, &apos;...&apos;}&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[25: Expected error: Unresolved type variable &apos;S&apos;. A data type cannot be extracted from a type variable. The original content might have been erased due to Java type erasure.]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[26: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$ComplexPojoWithGeneric&lt;`mapField` MAP&lt;STRING, INT&gt;, `simplePojoField` *org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojoWithGeneric&lt;`intField` INT, `primitiveBooleanField` BOOLEAN NOT NULL, `primitiveIntField` INT NOT NULL, `stringField` STRING&gt;*, `someObject` RAW{&apos;java.lang.Object&apos;, &apos;...&apos;}&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[27: Expected data type: STRING]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[28: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojoWithGenericHierarchy&lt;`intField` INT, `primitiveBooleanField` BOOLEAN NOT NULL, `primitiveIntField` INT NOT NULL, `stringField` STRING&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[29: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$ComplexPojoWithGettersAndSetters&lt;`mapField` MAP&lt;STRING, INT&gt;, `simplePojoField` *org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojo&lt;`intField` INT, `primitiveBooleanField` BOOLEAN NOT NULL, `primitiveIntField` INT NOT NULL, `stringField` STRING&gt;*, `someObject` RAW{&apos;java.lang.Object&apos;, &apos;...&apos;}&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[30: Expected error: Field &apos;stringField&apos; of class &apos;org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojoWithMissingSetter&apos; is mutable but is neither publicly accessible nor does it have a corresponding setter method.]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[31: Expected error: Field &apos;stringField&apos; of class &apos;org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojoWithMissingGetter&apos; is neither publicly accessible nor does it have a corresponding getter method.]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0"/>
  <testcase name="testExtraction[32: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojoWithAssigningConstructor&lt;`intField` INT, `primitiveBooleanField` BOOLEAN NOT NULL, `primitiveIntField` INT NOT NULL, `stringField` STRING&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[33: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$PojoWithCustomFieldOrder&lt;`z` BIGINT, `y` BOOLEAN, `x` INT&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[34: Expected data type: *org.apache.flink.api.java.tuple.Tuple2&lt;`f0` INT, `f1` *org.apache.flink.api.java.tuple.Tuple2&lt;`f0` STRING, `f1` BOOLEAN&gt;*&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.004"/>
  <testcase name="testExtraction[35: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojoWithManyAnnotations&lt;`intField` INT, `primitiveBooleanField` BOOLEAN NOT NULL, `primitiveIntField` INT NOT NULL, `stringField` STRING&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.005"/>
  <testcase name="testExtraction[36: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$ComplexPojoWithManyAnnotations&lt;`mapField` MAP&lt;STRING, INT&gt;, `simplePojoField` *org.apache.flink.table.types.extraction.DataTypeExtractorTest$SimplePojo&lt;`intField` INT, `primitiveBooleanField` BOOLEAN NOT NULL, `primitiveIntField` INT NOT NULL, `stringField` STRING&gt;*, `someObject` RAW{&apos;java.lang.Object&apos;, &apos;...&apos;}&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.003"/>
  <testcase name="testExtraction[37: Expected data type: ARRAY&lt;INT NOT NULL&gt;]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.002"/>
  <testcase name="testExtraction[38: Expected data type: INT]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.01"/>
  <testcase name="testExtraction[39: Expected data type: INT]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.005"/>
  <testcase name="testExtraction[40: Structured type with invalid constructor]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.002"/>
  <testcase name="testExtraction[41: Structured type with self reference]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[42: Structured type with self reference that is avoided using RAW]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.005"/>
  <testcase name="testExtraction[43: Data view with invalid list element]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.028"/>
  <testcase name="testExtraction[44: Data view with default extraction]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.004"/>
  <testcase name="testExtraction[45: Data view with custom extraction for list view]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.002"/>
  <testcase name="testExtraction[46: Data view with custom extraction for map view]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.003"/>
  <testcase name="testExtraction[47: Invalid data view]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.001"/>
  <testcase name="testExtraction[48: Assigning constructor for tuples]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.008"/>
  <testcase name="testExtraction[49: Expected data type: *org.apache.flink.table.types.extraction.DataTypeExtractorTest$PojoWithUnderscore&lt;`int_field` INT, `string_field` STRING&gt;*]" classname="org.apache.flink.table.types.extraction.DataTypeExtractorTest" time="0.002"/>
</testsuite>