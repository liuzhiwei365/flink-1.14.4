<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.apache.flink.table.types.DataTypesTest" time="0.09" tests="255" errors="0" skipped="0" failures="0">
  <properties>
    <property name="gopherProxySet" value="false"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="forkNumber" value="01"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/test-classes:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/classes:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-core/target/flink-core-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-annotations/target/flink-annotations-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-metrics/flink-metrics-core/target/flink-metrics-core-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/Users/liuzhiwei/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar:/Users/liuzhiwei/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/Users/liuzhiwei/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/liuzhiwei/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-guava/30.1.1-jre-14.0/flink-shaded-guava-30.1.1-jre-14.0.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-connector-files/target/flink-connector-files-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-file-sink-common/target/flink-file-sink-common-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-connector-base/target/flink-connector-base-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-asm-7/7.1-14.0/flink-shaded-asm-7-7.1-14.0.jar:/Users/liuzhiwei/.m2/repository/com/ibm/icu/icu4j/67.1/icu4j-67.1.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-core/target/flink-core-1.14.4-tests.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-test-utils-parent/flink-test-utils-junit/target/flink-test-utils-junit-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-force-shading/14.0/flink-shaded-force-shading-14.0.jar:/Users/liuzhiwei/.m2/repository/org/slf4j/slf4j-api/1.7.15/slf4j-api-1.7.15.jar:/Users/liuzhiwei/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter/5.7.2/junit-jupiter-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/liuzhiwei/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/vintage/junit-vintage-engine/5.7.2/junit-vintage-engine-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/liuzhiwei/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/Users/liuzhiwei/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/liuzhiwei/.m2/repository/org/mockito/mockito-core/2.21.0/mockito-core-2.21.0.jar:/Users/liuzhiwei/.m2/repository/net/bytebuddy/byte-buddy/1.8.22/byte-buddy-1.8.22.jar:/Users/liuzhiwei/.m2/repository/net/bytebuddy/byte-buddy-agent/1.8.22/byte-buddy-agent-1.8.22.jar:/Users/liuzhiwei/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-module-junit4/2.0.4/powermock-module-junit4-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-module-junit4-common/2.0.4/powermock-module-junit4-common-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-reflect/2.0.4/powermock-reflect-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-core/2.0.4/powermock-core-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/liuzhiwei/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-api-mockito2/2.0.4/powermock-api-mockito2-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-api-support/2.0.4/powermock-api-support-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.17.1/log4j-slf4j-impl-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-1.2-api/2.17.1/log4j-1.2-api-2.17.1.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="hadoop.version" value="2.4.1"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib"/>
    <property name="project.basedir" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common"/>
    <property name="sun.java.command" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/surefire/surefirebooter8017064036921010743.jar /Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/surefire 2022-06-10T17-37-14_312-jvmRun1 surefire8104797305428732709tmp surefire_11935237110688197575571tmp"/>
    <property name="surefire.test.class.path" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/test-classes:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/classes:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-core/target/flink-core-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-annotations/target/flink-annotations-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-metrics/flink-metrics-core/target/flink-metrics-core-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/Users/liuzhiwei/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar:/Users/liuzhiwei/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/Users/liuzhiwei/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/liuzhiwei/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-guava/30.1.1-jre-14.0/flink-shaded-guava-30.1.1-jre-14.0.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-connector-files/target/flink-connector-files-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-file-sink-common/target/flink-file-sink-common-1.14.4.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-connectors/flink-connector-base/target/flink-connector-base-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-asm-7/7.1-14.0/flink-shaded-asm-7-7.1-14.0.jar:/Users/liuzhiwei/.m2/repository/com/ibm/icu/icu4j/67.1/icu4j-67.1.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-core/target/flink-core-1.14.4-tests.jar:/Users/liuzhiwei/ideapro/flink-1.14.4/flink-test-utils-parent/flink-test-utils-junit/target/flink-test-utils-junit-1.14.4.jar:/Users/liuzhiwei/.m2/repository/org/apache/flink/flink-shaded-force-shading/14.0/flink-shaded-force-shading-14.0.jar:/Users/liuzhiwei/.m2/repository/org/slf4j/slf4j-api/1.7.15/slf4j-api-1.7.15.jar:/Users/liuzhiwei/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter/5.7.2/junit-jupiter-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/liuzhiwei/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/junit/vintage/junit-vintage-engine/5.7.2/junit-vintage-engine-5.7.2.jar:/Users/liuzhiwei/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/liuzhiwei/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/Users/liuzhiwei/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/liuzhiwei/.m2/repository/org/mockito/mockito-core/2.21.0/mockito-core-2.21.0.jar:/Users/liuzhiwei/.m2/repository/net/bytebuddy/byte-buddy/1.8.22/byte-buddy-1.8.22.jar:/Users/liuzhiwei/.m2/repository/net/bytebuddy/byte-buddy-agent/1.8.22/byte-buddy-agent-1.8.22.jar:/Users/liuzhiwei/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-module-junit4/2.0.4/powermock-module-junit4-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-module-junit4-common/2.0.4/powermock-module-junit4-common-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-reflect/2.0.4/powermock-reflect-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-core/2.0.4/powermock-core-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/liuzhiwei/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-api-mockito2/2.0.4/powermock-api-mockito2-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/powermock/powermock-api-support/2.0.4/powermock-api-support-2.0.4.jar:/Users/liuzhiwei/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.17.1/log4j-slf4j-impl-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/liuzhiwei/.m2/repository/org/apache/logging/log4j/log4j-1.2-api/2.17.1/log4j-1.2-api-2.17.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/liuzhiwei"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre"/>
    <property name="basedir" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="test.randomization.seed" value=""/>
    <property name="mvn.forkNumber" value="1"/>
    <property name="surefire.real.class.path" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common/target/surefire/surefirebooter8017064036921010743.jar"/>
    <property name="buffer-debloat.randomization" value="true"/>
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/classes"/>
    <property name="checkpointing.changelog" value="unset"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_311-b11"/>
    <property name="user.name" value="liuzhiwei"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="10.16"/>
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/liuzhiwei/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/9v/knhh7l116z927rs422hz7g7r0000gn/T/"/>
    <property name="idea.version" value="2021.3.2"/>
    <property name="java.version" value="1.8.0_311"/>
    <property name="user.dir" value="/Users/liuzhiwei/ideapro/flink-1.14.4/flink-table/flink-table-common"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="checkpointing.randomization" value="true"/>
    <property name="java.library.path" value="/Users/liuzhiwei/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.311-b11"/>
    <property name="java.ext.dirs" value="/Users/liuzhiwei/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="maven.repo.local" value="/Users/liuzhiwei/.m2/repository"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="testChildren[0: CHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[0: CHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[0: CHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.004"/>
  <testcase name="testConversionClass[0: CHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[0: CHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testChildren[1: VARCHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[1: VARCHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[1: VARCHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[1: VARCHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[1: VARCHAR{2}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[2: STRING]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[2: STRING]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testLogicalType[2: STRING]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[2: STRING]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[2: STRING]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[3: BOOLEAN]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[3: BOOLEAN]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[3: BOOLEAN]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[3: BOOLEAN]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[3: BOOLEAN]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[4: BINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[4: BINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[4: BINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[4: BINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[4: BINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[5: VARBINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[5: VARBINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[5: VARBINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[5: VARBINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testResolvedDataType[5: VARBINARY{42}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[6: BYTES]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testUnresolvedString[6: BYTES]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[6: BYTES]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[6: BYTES]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[6: BYTES]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[7: DECIMAL{10, 10}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testUnresolvedString[7: DECIMAL{10, 10}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[7: DECIMAL{10, 10}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testConversionClass[7: DECIMAL{10, 10}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[7: DECIMAL{10, 10}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[8: TINYINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[8: TINYINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[8: TINYINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[8: TINYINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[8: TINYINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[9: SMALLINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testUnresolvedString[9: SMALLINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[9: SMALLINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[9: SMALLINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[9: SMALLINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[10: INT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[10: INT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[10: INT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[10: INT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[10: INT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[11: BIGINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[11: BIGINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[11: BIGINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[11: BIGINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[11: BIGINT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[12: FLOAT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[12: FLOAT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[12: FLOAT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[12: FLOAT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[12: FLOAT]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[13: DOUBLE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[13: DOUBLE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[13: DOUBLE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[13: DOUBLE]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testResolvedDataType[13: DOUBLE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[14: DATE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[14: DATE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[14: DATE]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testConversionClass[14: DATE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[14: DATE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[15: TIME{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[15: TIME{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[15: TIME{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testConversionClass[15: TIME{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[15: TIME{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[16: TIME{0}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testUnresolvedString[16: TIME{0}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[16: TIME{0}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[16: TIME{0}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[16: TIME{0}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[17: TIMESTAMP{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[17: TIMESTAMP{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testLogicalType[17: TIMESTAMP{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testConversionClass[17: TIMESTAMP{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testResolvedDataType[17: TIMESTAMP{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[18: TIMESTAMP{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[18: TIMESTAMP{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[18: TIMESTAMP{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[18: TIMESTAMP{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[18: TIMESTAMP{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[19: TIMESTAMP{3} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[19: TIMESTAMP{3} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0.002"/>
  <testcase name="testLogicalType[19: TIMESTAMP{3} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[19: TIMESTAMP{3} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[19: TIMESTAMP{3} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[20: TIMESTAMP{6} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[20: TIMESTAMP{6} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[20: TIMESTAMP{6} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testConversionClass[20: TIMESTAMP{6} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[20: TIMESTAMP{6} WITH TIME ZONE]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[21: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[21: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[21: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[21: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[21: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[22: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[22: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[22: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[22: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[22: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[23: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[23: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[23: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[23: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[23: TIMESTAMP_LTZ{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[24: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[24: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testLogicalType[24: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[24: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[24: TIMESTAMP_LTZ{6}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[25: INTERVAL MINUTE TO SECOND{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[25: INTERVAL MINUTE TO SECOND{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[25: INTERVAL MINUTE TO SECOND{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[25: INTERVAL MINUTE TO SECOND{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[25: INTERVAL MINUTE TO SECOND{3}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[26: INTERVAL MONTH]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[26: INTERVAL MONTH]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[26: INTERVAL MONTH]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[26: INTERVAL MONTH]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[26: INTERVAL MONTH]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[27: ARRAY&lt;ARRAY&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[27: ARRAY&lt;ARRAY&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[27: ARRAY&lt;ARRAY&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[27: ARRAY&lt;ARRAY&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[27: ARRAY&lt;ARRAY&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[28: ARRAY&lt;ARRAY&lt;INT NOT NULL&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testUnresolvedString[28: ARRAY&lt;ARRAY&lt;INT NOT NULL&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[28: ARRAY&lt;ARRAY&lt;INT NOT NULL&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[28: ARRAY&lt;ARRAY&lt;INT NOT NULL&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[28: ARRAY&lt;ARRAY&lt;INT NOT NULL&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[29: MULTISET&lt;MULTISET&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[29: MULTISET&lt;MULTISET&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[29: MULTISET&lt;MULTISET&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[29: MULTISET&lt;MULTISET&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[29: MULTISET&lt;MULTISET&lt;INT&gt;&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[30: MAP&lt;INT, SMALLINT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[30: MAP&lt;INT, SMALLINT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[30: MAP&lt;INT, SMALLINT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[30: MAP&lt;INT, SMALLINT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[30: MAP&lt;INT, SMALLINT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[31: ROW&lt;`field1` CHAR{2}, `field2` BOOLEAN&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[31: ROW&lt;`field1` CHAR{2}, `field2` BOOLEAN&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[31: ROW&lt;`field1` CHAR{2}, `field2` BOOLEAN&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0.002"/>
  <testcase name="testConversionClass[31: ROW&lt;`field1` CHAR{2}, `field2` BOOLEAN&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[31: ROW&lt;`field1` CHAR{2}, `field2` BOOLEAN&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[32: ROW&lt;`f0` INT, `f1` FLOAT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[32: ROW&lt;`f0` INT, `f1` FLOAT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[32: ROW&lt;`f0` INT, `f1` FLOAT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testConversionClass[32: ROW&lt;`f0` INT, `f1` FLOAT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[32: ROW&lt;`f0` INT, `f1` FLOAT&gt;]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[33: NULL]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[33: NULL]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[33: NULL]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[33: NULL]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[33: NULL]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[34: RAW{&apos;java.lang.Void&apos;, &apos;...&apos;}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[34: RAW{&apos;java.lang.Void&apos;, &apos;...&apos;}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[34: RAW{&apos;java.lang.Void&apos;, &apos;...&apos;}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[34: RAW{&apos;java.lang.Void&apos;, &apos;...&apos;}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[34: RAW{&apos;java.lang.Void&apos;, &apos;...&apos;}]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[35: [RAW{&apos;java.lang.Void&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[35: [RAW{&apos;java.lang.Void&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[35: [RAW{&apos;java.lang.Void&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[35: [RAW{&apos;java.lang.Void&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[35: [RAW{&apos;java.lang.Void&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[36: [INT]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[36: [INT]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[36: [INT]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.005"/>
  <testcase name="testConversionClass[36: [INT]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[36: [INT]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[37: [&apos;java.lang.Integer&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[37: [&apos;java.lang.Integer&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[37: [&apos;java.lang.Integer&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[37: [&apos;java.lang.Integer&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[37: [&apos;java.lang.Integer&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[38: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[38: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[38: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[38: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[38: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testChildren[39: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[39: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[39: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[39: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[39: [&apos;java.sql.Timestamp&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[40: [MAP&lt;[INT], [STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[40: [MAP&lt;[INT], [STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.002"/>
  <testcase name="testLogicalType[40: [MAP&lt;[INT], [STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.002"/>
  <testcase name="testConversionClass[40: [MAP&lt;[INT], [STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[40: [MAP&lt;[INT], [STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[41: [MAP&lt;[INT], STRING NOT NULL&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[41: [MAP&lt;[INT], STRING NOT NULL&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[41: [MAP&lt;[INT], STRING NOT NULL&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[41: [MAP&lt;[INT], STRING NOT NULL&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[41: [MAP&lt;[INT], STRING NOT NULL&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[42: [MULTISET&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[42: [MULTISET&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testLogicalType[42: [MULTISET&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[42: [MULTISET&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[42: [MULTISET&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[43: [ARRAY&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[43: [ARRAY&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[43: [ARRAY&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[43: [ARRAY&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[43: [ARRAY&lt;[STRING]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testChildren[44: [ARRAY&lt;[INT]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[44: [ARRAY&lt;[INT]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[44: [ARRAY&lt;[INT]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testConversionClass[44: [ARRAY&lt;[INT]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.002"/>
  <testcase name="testResolvedDataType[44: [ARRAY&lt;[INT]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[45: [ROW&lt;field1 [CHAR{2}], field2 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[45: [ROW&lt;field1 [CHAR{2}], field2 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testLogicalType[45: [ROW&lt;field1 [CHAR{2}], field2 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[45: [ROW&lt;field1 [CHAR{2}], field2 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[45: [ROW&lt;field1 [CHAR{2}], field2 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testChildren[46: [ROW&lt;f0 [CHAR{2}], f1 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[46: [ROW&lt;f0 [CHAR{2}], f1 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[46: [ROW&lt;f0 [CHAR{2}], f1 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[46: [ROW&lt;f0 [CHAR{2}], f1 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[46: [ROW&lt;f0 [CHAR{2}], f1 BOOLEAN&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[47: [ARRAY&lt;[ROW&lt;f0 [ARRAY&lt;INT&gt;], f1 ARRAY&lt;INT&gt;&gt;]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[47: [ARRAY&lt;[ROW&lt;f0 [ARRAY&lt;INT&gt;], f1 ARRAY&lt;INT&gt;&gt;]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[47: [ARRAY&lt;[ROW&lt;f0 [ARRAY&lt;INT&gt;], f1 ARRAY&lt;INT&gt;&gt;]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[47: [ARRAY&lt;[ROW&lt;f0 [ARRAY&lt;INT&gt;], f1 ARRAY&lt;INT&gt;&gt;]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[47: [ARRAY&lt;[ROW&lt;f0 [ARRAY&lt;INT&gt;], f1 ARRAY&lt;INT&gt;&gt;]&gt;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testChildren[48: [RAW{&apos;java.lang.Object&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[48: [RAW{&apos;java.lang.Object&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[48: [RAW{&apos;java.lang.Object&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[48: [RAW{&apos;java.lang.Object&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[48: [RAW{&apos;java.lang.Object&apos;, &apos;?&apos;}]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testChildren[49: [&apos;org.apache.flink.table.types.DataTypesTest$SimplePojo&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[49: [&apos;org.apache.flink.table.types.DataTypesTest$SimplePojo&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.001"/>
  <testcase name="testLogicalType[49: [&apos;org.apache.flink.table.types.DataTypesTest$SimplePojo&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[49: [&apos;org.apache.flink.table.types.DataTypesTest$SimplePojo&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[49: [&apos;org.apache.flink.table.types.DataTypesTest$SimplePojo&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.015"/>
  <testcase name="testChildren[50: [&apos;EnumTypeInfo&lt;java.time.DayOfWeek&gt;&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testUnresolvedString[50: [&apos;EnumTypeInfo&lt;java.time.DayOfWeek&gt;&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testLogicalType[50: [&apos;EnumTypeInfo&lt;java.time.DayOfWeek&gt;&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testConversionClass[50: [&apos;EnumTypeInfo&lt;java.time.DayOfWeek&gt;&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0"/>
  <testcase name="testResolvedDataType[50: [&apos;EnumTypeInfo&lt;java.time.DayOfWeek&gt;&apos;]]" classname="org.apache.flink.table.types.DataTypesTest" time="0.002"/>
</testsuite>